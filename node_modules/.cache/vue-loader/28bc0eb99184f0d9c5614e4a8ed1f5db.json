{"remainingRequest":"/Users/vaa/code/ful/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/vaa/code/ful/src/components/ProductManager.vue?vue&type=style&index=0&id=d09a8224&scoped=true&lang=css","dependencies":[{"path":"/Users/vaa/code/ful/src/components/ProductManager.vue","mtime":1727888530000},{"path":"/Users/vaa/code/ful/node_modules/css-loader/dist/cjs.js","mtime":1727895832834},{"path":"/Users/vaa/code/ful/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1727895833150},{"path":"/Users/vaa/code/ful/node_modules/postcss-loader/src/index.js","mtime":1727895832918},{"path":"/Users/vaa/code/ful/node_modules/cache-loader/dist/cjs.js","mtime":1727895832636},{"path":"/Users/vaa/code/ful/node_modules/vue-loader/lib/index.js","mtime":1727895832988}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5wcm9kdWN0LW1hbmFnZXIgewogIHBhZGRpbmc6IDIwcHg7Cn0KLmZvcm0tZ3JvdXAgewogIG1hcmdpbi1ib3R0b206IDE1cHg7Cn0KLnNhdmUtYnV0dG9uIHsKICBtYXJnaW4tdG9wOiAxMHB4OwogIHBhZGRpbmc6IDEwcHggMTVweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzQ5OGRiOwogIGJvcmRlcjogbm9uZTsKICBjb2xvcjogd2hpdGU7CiAgY3Vyc29yOiBwb2ludGVyOwogIGJvcmRlci1yYWRpdXM6IDVweDsKfQouc2F2ZS1idXR0b246aG92ZXIgewogIGJhY2tncm91bmQtY29sb3I6ICMyOTgwYjk7Cn0K"},{"version":3,"sources":["ProductManager.vue"],"names":[],"mappings":";AAkHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ProductManager.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"product-manager\">\n    <h2>Product Management</h2>\n    <form @submit.prevent=\"saveProduct\">\n      <div class=\"form-group\">\n        <label>Title:</label>\n        <input type=\"text\" v-model=\"product.title\" required />\n      </div>\n      <div class=\"form-group\">\n        <label>Price:</label>\n        <input type=\"number\" v-model=\"product.price\" required />\n      </div>\n      <div class=\"form-group\">\n        <label>Description:</label>\n        <textarea v-model=\"product.description\" required></textarea>\n      </div>\n      <div class=\"form-group\">\n        <label>Price ID (Stripe):</label>\n        <input type=\"text\" v-model=\"product.priceId\" required />\n      </div>\n      <div class=\"form-group\">\n        <label>Category:</label>\n        <input type=\"text\" v-model=\"product.category\" required />\n      </div>\n      <button type=\"submit\" class=\"save-button\">Save Product</button>\n    </form>\n\n    <h3>Existing Products</h3>\n    <ul>\n      <li v-for=\"prod in products\" :key=\"prod._id\">\n        {{ prod.title }} - {{ prod.price }} - {{ prod.category }}\n        <button @click=\"editProduct(prod)\">Edit</button>\n        <button @click=\"deleteProduct(prod._id)\">Delete</button>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ProductManager',\n  data() {\n    return {\n      products: [],\n      product: {\n        title: \"\",\n        price: \"\",\n        description: \"\",\n        priceId: \"\",\n        category: \"\"\n      }\n    };\n  },\n  mounted() {\n    this.fetchProducts();\n  },\n  methods: {\n    fetchProducts() {\n      fetch(\"http://localhost:5000/products\")\n        .then((response) => response.json())\n        .then((data) => {\n          this.products = data;\n        })\n        .catch((error) => {\n          console.error(\"Error fetching products:\", error);\n        });\n    },\n    saveProduct() {\n      const url = this.product._id ? `http://localhost:5000/products/${this.product._id}` : \"http://localhost:5000/products\";\n      const method = this.product._id ? \"PUT\" : \"POST\";\n\n      fetch(url, {\n        method,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(this.product),\n      })\n        .then(() => {\n          this.fetchProducts();\n          this.resetForm();\n        })\n        .catch((error) => {\n          console.error(\"Error saving product:\", error);\n        });\n    },\n    editProduct(prod) {\n      this.product = { ...prod };\n    },\n    deleteProduct(id) {\n      fetch(`http://localhost:5000/products/${id}`, {\n        method: \"DELETE\",\n      })\n        .then(() => {\n          this.fetchProducts();\n        })\n        .catch((error) => {\n          console.error(\"Error deleting product:\", error);\n        });\n    },\n    resetForm() {\n      this.product = {\n        title: \"\",\n        price: \"\",\n        description: \"\",\n        priceId: \"\",\n        category: \"\",\n      };\n    },\n  },\n};\n</script>\n\n<style scoped>\n.product-manager {\n  padding: 20px;\n}\n.form-group {\n  margin-bottom: 15px;\n}\n.save-button {\n  margin-top: 10px;\n  padding: 10px 15px;\n  background-color: #3498db;\n  border: none;\n  color: white;\n  cursor: pointer;\n  border-radius: 5px;\n}\n.save-button:hover {\n  background-color: #2980b9;\n}\n</style>\n"]}]}